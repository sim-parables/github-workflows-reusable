# Original Work: https://github.com/Azure-Samples/terraform-github-actions/blob/main/.github/workflows/tf-plan-apply.yml

name: '[Reusable|Dispatch] Terraform Read'

on:
  workflow_call:
    inputs:
      ACT_MODE:
        required: true
        type: boolean
      targets:
        required: false
        type: string
        default: null
    
    secrets:
      GCP_IMPERSONATE_SERVICE)ACCOUNT_EMAIL:
        required: true
      GCP_PROJECT:
        required: true
      GCP_WORKLOAD_IDENTITY_PROVIDER:
        required: false
      GOOGLE_OAUTH_ACCESS_TOKEN:
        required: false
      TF_API_TOKEN:
        required: true

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read

env:
  GOOGLE_PROJECT: "${{ secrets.GCP_PROJECT }}"
  GOOGLE_OAUTH_ACCESS_TOKEN: "${{ secrets.GOOGLE_OAUTH_ACCESS_TOKEN }}"
  TF_VAR_IMPERSONATE_SERVICE_ACCOUNT_EMAIL: "${{ secrets.GCP_IMPERSONATE_SERVICE_ACCOUNT_EMAIL }}"
  TF_VAR_GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
  TF_VAR_GITHUB_REPOSITORY: ${{ github.repository }}
  TF_VAR_GITHUB_REF: ${{ github.ref }}
  TF_VAR_GITHUB_ENV: production

jobs:
  reusable-dispatch-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    
    defaults:
        run:
          working-directory: "./test"

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Configure GCP Credentials - Github Runner
      uses: 'google-github-actions/auth@v2'
      if: ${{ !inputs.ACT_MODE }}
      with:
        service_account: "${{ secrets.GCP_IMPERSONATE_SERVICE_ACCOUNT_EMAIL }}"
        workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init

    - name: Terraform plan
      run: |
        if [ "${{ inputs.targets }}" == "all" ]
        then
          terraform plan --auto-approve
        else
          command_targets=""
          targets=($(echo "${{ inputs.targets }}" | tr ',' '\n'))
          for t in ${targets[@]}
          do
            command_targets+=" -target $t"
          done

          terraform plan $command_targets
        fi