# Original Work: https://github.com/Azure-Samples/terraform-github-actions/blob/main/.github/workflows/tf-plan-apply.yml

name: '[Reusable|Dispatch] Terraform Write-Destroy'

on:
  workflow_call:
    inputs:
      ACT_MODE:
        description: |
          For running Github Action Workflows locally with Nektos act
        required: true
        type: boolean
      mask:
        description: |
          Flag to mask environment variables
        required: false
        type: boolean
        default: true
    
    secrets:
      env_variables:
        description: |
          Passing ENV Variables from parent level workflow to reusable workflow
          https://github.com/orgs/community/discussions/26671#discussioncomment-6776498

          Possible ENV Variables include
          secrets:
            env_variables:
              TF_VAR_WIF_ID="$\{{ github.run_id}}-$\{{github.run_attempt}}"
              TF_VAR_GITHUB_REPOSITORY_OWNER="$\{{ github.repository_owner }}"
              TF_VAR_GITHUB_REPOSITORY="$\{{ github.repository }}"
              TF_VAR_GITHUB_REF="$\{{ github.ref }}"
              TF_VAR_GITHUB_ENV=production

        required: false
      GOOGLE_IMPERSONATE_SERVICE_ACCOUNT_EMAIL:
        description: |
          Google Cloud Service Account Impersonator for authentication
        required: true
      GOOGLE_PROJECT:
        description: |
          Google Cloud Project ID
        required: true
      GOOGLE_WORKLOAD_IDENTITY_PROVIDER:
        description: |
          Google Cloud Workload Identity Federation Provider Member ID
        required: false
      GOOGLE_OAUTH_ACCESS_TOKEN:
        description: |
          Google Cloud OAauth2 Access Token
        required: false
      TF_API_TOKEN:
        description: |
          Terraform.io Access Token
        required: true

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read

env:
  GOOGLE_PROJECT: "${{ secrets.GOOGLE_PROJECT }}"
  GOOGLE_OAUTH_ACCESS_TOKEN: "${{ secrets.GOOGLE_OAUTH_ACCESS_TOKEN }}"
  TF_VAR_IMPERSONATE_SERVICE_ACCOUNT_EMAIL: "${{ secrets.GOOGLE_IMPERSONATE_SERVICE_ACCOUNT_EMAIL }}"

jobs:
  reusable-dispatch-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    
    defaults:
        run:
          working-directory: "./test"

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Decode Environment Variables
      env:
        env_vars: ${{ secrets.env_variables }}
      run: |
        for i in $env_vars; do
          i=$(echo $i | sed 's/=.*//g')=$(echo ${i#*=} | base64 -di | base64 -di)
          if ${{ inputs.mask }}
          then
            echo ::add-mask::${i#*=}
          fi
          printf '%s\n' "$i" >> $GITHUB_ENV
        done
    
    - name: Configure GCP Credentials - Github Runner
      uses: 'google-github-actions/auth@v2'
      if: ${{ !inputs.ACT_MODE }}
      with:
        service_account: "${{ secrets.GOOGLE_IMPERSONATE_SERVICE_ACCOUNT_EMAIL }}"
        workload_identity_provider: "${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}"

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init

    - name: Terraform destroy
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 5
        max_attempts: 3
        retry_on: error
        command: 'terraform -chdir=test destroy --auto-approve'
